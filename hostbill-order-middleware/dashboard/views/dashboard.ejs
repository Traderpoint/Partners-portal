<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Middleware Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }
        
        .header h1 {
            color: #2c3e50;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .status-badge {
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
            text-transform: uppercase;
        }
        
        .status-healthy {
            background: #2ecc71;
            color: white;
        }
        
        .status-unhealthy {
            background: #e74c3c;
            color: white;
        }
        
        .status-unknown {
            background: #f39c12;
            color: white;
        }
        
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .card {
            background: rgba(255, 255, 255, 0.95);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }
        
        .card h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .stat-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #ecf0f1;
        }
        
        .stat-item:last-child {
            border-bottom: none;
        }
        
        .stat-value {
            font-weight: bold;
            color: #3498db;
        }
        
        .logs-container {
            max-height: 400px;
            overflow-y: auto;
            background: #2c3e50;
            color: #ecf0f1;
            padding: 15px;
            border-radius: 10px;
            font-family: 'Courier New', monospace;
            font-size: 12px;
        }
        
        .log-entry {
            margin-bottom: 5px;
            padding: 5px;
            border-left: 3px solid #3498db;
            padding-left: 10px;
        }
        
        .log-error {
            border-left-color: #e74c3c;
            background: rgba(231, 76, 60, 0.1);
        }
        
        .log-warn {
            border-left-color: #f39c12;
            background: rgba(243, 156, 18, 0.1);
        }
        
        .log-info {
            border-left-color: #2ecc71;
            background: rgba(46, 204, 113, 0.1);
        }
        
        .recent-requests {
            max-height: 300px;
            overflow-y: auto;
        }
        
        .request-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px;
            margin-bottom: 5px;
            background: #f8f9fa;
            border-radius: 5px;
            font-size: 12px;
        }
        
        .method-badge {
            padding: 2px 8px;
            border-radius: 10px;
            font-weight: bold;
            font-size: 10px;
        }
        
        .method-get { background: #2ecc71; color: white; }
        .method-post { background: #3498db; color: white; }
        .method-put { background: #f39c12; color: white; }
        .method-delete { background: #e74c3c; color: white; }
        
        .refresh-btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin-left: 10px;
        }
        
        .refresh-btn:hover {
            background: #2980b9;
        }
        
        .nav-links {
            margin-top: 10px;
        }
        
        .nav-links a {
            color: #3498db;
            text-decoration: none;
            margin-right: 20px;
            font-weight: bold;
        }
        
        .nav-links a:hover {
            text-decoration: underline;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        
        .loading {
            animation: pulse 1.5s infinite;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>
                üéõÔ∏è Middleware Dashboard
                <span class="status-badge status-<%= middlewareHealth.status %>">
                    <%= middlewareHealth.status %>
                </span>
                <button class="refresh-btn" onclick="location.reload()">üîÑ Refresh</button>
            </h1>
            <p>Monitoring HostBill Order Middleware - Uptime: <%= Math.floor(uptime / 3600) %>h <%= Math.floor((uptime % 3600) / 60) %>m <%= uptime % 60 %>s</p>
            <div class="nav-links">
                <a href="/">üìä Dashboard</a>
                <a href="/test">üß™ Test API</a>
                <a href="/api/health">üíö Health Check</a>
                <a href="/api/stats">üìà Stats JSON</a>
                <a href="http://localhost:3000/middleware-dashboard" target="_blank">üìä Basic Dashboard (CloudVPS)</a>
            </div>
        </div>

        <div class="grid">
            <!-- System Stats -->
            <div class="card">
                <h3>üìä System Statistics</h3>
                <div class="stat-item">
                    <span>Dashboard Requests</span>
                    <span class="stat-value"><%= stats.requests %></span>
                </div>
                <div class="stat-item">
                    <span>Dashboard Errors</span>
                    <span class="stat-value"><%= stats.errors %></span>
                </div>
                <div class="stat-item">
                    <span>Last Activity</span>
                    <span class="stat-value"><%= stats.lastActivity ? new Date(stats.lastActivity).toLocaleString() : 'None' %></span>
                </div>
                <div class="stat-item">
                    <span>System Health</span>
                    <span class="stat-value status-badge status-<%= stats.systemHealth %>"><%= stats.systemHealth %></span>
                </div>
            </div>

            <!-- Middleware Health -->
            <div class="card">
                <h3>üîß Middleware Health</h3>
                <div class="stat-item">
                    <span>Status</span>
                    <span class="stat-value"><%= middlewareHealth.status %></span>
                </div>
                <% if (middlewareHealth.data) { %>
                <div class="stat-item">
                    <span>Middleware Uptime</span>
                    <span class="stat-value"><%= Math.floor(middlewareHealth.data.uptime || 0) %>s</span>
                </div>
                <div class="stat-item">
                    <span>HostBill API</span>
                    <span class="stat-value"><%= middlewareHealth.data.hostbill_api?.status || 'unknown' %></span>
                </div>
                <% } %>
                <% if (middlewareHealth.error) { %>
                <div class="stat-item">
                    <span>Error</span>
                    <span class="stat-value" style="color: #e74c3c;"><%= middlewareHealth.error %></span>
                </div>
                <% } %>
            </div>

            <!-- Log Files -->
            <div class="card">
                <h3>üìÅ Log Files</h3>
                <% if (systemStats.logFiles.length > 0) { %>
                    <% systemStats.logFiles.forEach(file => { %>
                    <div class="stat-item">
                        <span><%= file.name %></span>
                        <span class="stat-value"><%= Math.round(file.size / 1024) %> KB</span>
                    </div>
                    <% }) %>
                    <div class="stat-item">
                        <span><strong>Total Size</strong></span>
                        <span class="stat-value"><strong><%= Math.round(systemStats.totalLogSize / 1024) %> KB</strong></span>
                    </div>
                <% } else { %>
                    <p>No log files found</p>
                <% } %>
            </div>
        </div>

        <!-- Recent Requests -->
        <div class="card">
            <h3>üîÑ Recent Requests (Last <%= stats.recentRequests.length %>)</h3>
            <div class="recent-requests">
                <% if (stats.recentRequests.length > 0) { %>
                    <% stats.recentRequests.forEach(req => { %>
                    <div class="request-item">
                        <div>
                            <span class="method-badge method-<%= req.method.toLowerCase() %>"><%= req.method %></span>
                            <span><%= req.url %></span>
                        </div>
                        <div>
                            <small><%= new Date(req.timestamp).toLocaleTimeString() %></small>
                        </div>
                    </div>
                    <% }) %>
                <% } else { %>
                    <p>No recent requests</p>
                <% } %>
            </div>
        </div>

        <!-- Recent Logs -->
        <div class="card">
            <h3>üìã Recent Logs (Last 20)</h3>
            <div class="logs-container">
                <% if (recentLogs.length > 0) { %>
                    <% recentLogs.slice(0, 20).forEach(log => { %>
                    <div class="log-entry log-<%= log.level || 'info' %>">
                        <strong>[<%= new Date(log.timestamp).toLocaleString() %>]</strong>
                        [<%= log.level?.toUpperCase() || 'INFO' %>]
                        <%= log.message %>
                        <% if (log.meta && Object.keys(log.meta).length > 0) { %>
                            <br><small>Meta: <%= JSON.stringify(log.meta) %></small>
                        <% } %>
                    </div>
                    <% }) %>
                <% } else { %>
                    <p>No recent logs available</p>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        // Auto-refresh every 30 seconds
        setTimeout(() => {
            location.reload();
        }, 30000);

        // Add loading animation to refresh button
        document.querySelector('.refresh-btn').addEventListener('click', function() {
            this.classList.add('loading');
        });

        // Real-time updates via fetch (optional)
        async function updateStats() {
            try {
                const response = await fetch('/api/stats');
                const data = await response.json();
                if (data.success) {
                    // Update stats without full page reload
                    console.log('Stats updated:', data.stats);
                }
            } catch (error) {
                console.error('Failed to update stats:', error);
            }
        }

        // Update stats every 10 seconds
        setInterval(updateStats, 10000);
    </script>
</body>
</html>
